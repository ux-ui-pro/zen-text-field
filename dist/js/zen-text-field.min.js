/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _zen_text_field_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./zen-text-field.js */ \"./src/js/zen-text-field.js\");\n\n\n(0,_zen_text_field_js__WEBPACK_IMPORTED_MODULE_0__.ZenInput)()\n;(0,_zen_text_field_js__WEBPACK_IMPORTED_MODULE_0__.ZenTextarea)()\n\n\n//# sourceURL=webpack://zen-text-field/./src/js/index.js?");

/***/ }),

/***/ "./src/js/zen-text-field.js":
/*!**********************************!*\
  !*** ./src/js/zen-text-field.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ZenInput\": () => (/* binding */ ZenInput),\n/* harmony export */   \"ZenTextarea\": () => (/* binding */ ZenTextarea)\n/* harmony export */ });\nconst notched = (`\n                <div class=\"notched-outline\">\n                    <div class=\"notched-outline__leading\"></div>\n                    <div class=\"notched-outline__notch\"></div>\n                    <div class=\"notched-outline__trailing\"></div>\n                </div>\n            `)\n\nlet customizeLabel = (textField) => {\n        let label = textField.previousElementSibling\n\n        textField.parentElement.insertAdjacentHTML('afterbegin', notched)\n        textField.parentElement\n            .querySelector('.notched-outline__notch')\n            .insertAdjacentElement('afterbegin', label)\n    },\n    customInput = () => {\n        let inputs = document.querySelectorAll('.input input')\n\n        for (let input of inputs) {\n            let label = input.previousElementSibling\n            customizeLabel(input)\n\n            let {classList} = input.parentNode,\n                {style} = label.parentNode\n\n            if (input.disabled) {\n                classList.add('input--disabled')\n            }\n\n            if (input.required) {\n                label.classList.add('floating-label--required')\n            }\n\n            if (input.value.trim().length > 0) {\n                classList.add('input--filled')\n                if (label) {\n                    style.width = ((label.clientWidth + 13) * .75) + 'px'\n                }\n            }\n\n            input.addEventListener('focus', () => {\n                classList.add('input--focused')\n                if (label) {\n                    style.width = ((label.clientWidth + 13) * .75) + 'px'\n                }\n            })\n\n            input.addEventListener('blur', () => {\n                classList.remove('input--focused')\n                if (input.value.trim().length <= 0 && label) {\n                    style.width = 'auto'\n                }\n            })\n\n            input.addEventListener('input', () => {\n                if (input.value.trim().length > 0) {\n                    classList.add('input--filled')\n                } else {\n                    classList.remove('input--filled')\n                }\n            })\n        }\n    },\n    customTextarea = () => {\n        let textareas = document.querySelectorAll('.textarea textarea')\n\n        for (let textarea of textareas) {\n            let label = textarea.previousElementSibling\n            customizeLabel(textarea)\n\n            let {classList} = textarea.parentNode,\n                {style} = label.parentNode\n\n            if (textarea.disabled) {\n                classList.add('textarea--disabled')\n            }\n\n            if (textarea.required) {\n                label.classList.add('floating-label--required')\n            }\n\n            if (textarea.value.trim().length > 0) {\n                classList.add('textarea--filled')\n                if (label) {\n                    style.width = ((label.clientWidth + 13) * .75) + 'px'\n                }\n            }\n\n            textarea.addEventListener('focus', () => {\n                classList.add('textarea--focused')\n                if (label) {\n                    style.width = ((label.clientWidth + 13) * .75) + 'px'\n                }\n            })\n\n            textarea.addEventListener('blur', () => {\n                classList.remove('textarea--focused')\n                if (textarea.value.trim().length <= 0 && label) {\n                    style.width = 'auto'\n                }\n            })\n\n            textarea.addEventListener('change', () => {\n                if (textarea.value.trim().length > 0) {\n                    classList.add('textarea--filled')\n                } else {\n                    classList.remove('textarea--filled')\n                }\n            })\n\n            textarea.addEventListener('input', () => {\n                if (classList.contains('textarea--auto-resizeable')) {\n                    textarea.style.height = 'auto'\n                    textarea.style.height = (textarea.scrollHeight) + 'px'\n                }\n            })\n        }\n    },\n    onReady = (e) => {\n        document.addEventListener('DOMContentLoaded', () => {\n            e()\n        })\n    }\n\nfunction ZenInput() {\n    onReady(customInput)\n}\n\nfunction ZenTextarea() {\n    onReady(customTextarea)\n}\n\n\n//# sourceURL=webpack://zen-text-field/./src/js/zen-text-field.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;